{"name":"Jquery Tree","body":"# jQuery Tree\r\n\r\nTree plugin for jQuery\r\n\r\n## Getting Started\r\nDownload the [production version][min] or the [development version][max].\r\n\r\n[min]: https://raw.github.com/RafalFilipek/jquery.tree/master/dist/jquery.tree.min.js\r\n[max]: https://raw.github.com/RafalFilipek/jquery.tree/master/dist/jquery.tree.js\r\n\r\nIn your web page:\r\n\r\n```html\r\n<ul id=\"tree\">\r\n  <li>\r\n    <span class=\"switch\">+</span>Folder1\r\n    <ul>\r\n      <li><span class=\"switch\">+</span>Folder1.1\r\n        <ul>\r\n          <li>Folder1.1.1</li>\r\n        </ul>\r\n      </li>\r\n      <li>Folder1.2</li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n<script src=\"jquery.js\"></script>\r\n<script src=\"dist/jquery.tree.min.js\"></script>\r\n<script>\r\njQuery(function($) {\r\n  $('#tree').tree()\r\n});\r\n</script>\r\n```\r\n\r\n## Documentation\r\n`jQuery Tree` is a **simple** plugin. Keep in mind that you will never find here fancy animations, themes and things like that. It was created to toggle branches of your `tree`.\r\nThis plugin will not change your html code unless you want to.\r\n\r\nHowever you still have some configuration options:\r\n\r\n * `branch` : By default, `ul` element inside `root` node.\r\n * `node` : By default, `li` element.\r\n * `branch_class` : This class will be added to node elements that contains another branch.\r\n * `auto_switch_add` : Default `false`. You can specify this option as a function that returns jQuery object witch will be prepended into all node elements that contains another branch.\r\n * `switch` : By default, `.switch`. This selector defines element which will toggle subbranch for specified node. If your're using `auto_switch_add` option remember to add this class to element.\r\n * `auto_open_class`: By default, `open`. If you will add this class to any node or branch it will be visible after initialization.\r\n * `events` : By default its a `{}` ( empty object ). Here you can specify all events for any element of your tree. Each key defines events names and selectors. Values are a functions that will be executed. You can find some examples in _Examples_ section.\r\n\r\n## Examples\r\n\r\n```javascript\r\n//Dynamic switch\r\n$('#tree').tree({\r\n  'auto_switch_add': function(){ return $('<i>').addClass('switch icon-plus'); },\r\n});\r\n\r\n// Custom event\r\n$('#tree').tree({\r\n  'events': {\r\n    'click .branch a.add': function(e){\r\n      $(e.target).closest('.branch').children('ul').append('<li class=\"new\">New</li>');\r\n    }\r\n  }\r\n});\r\n// Multiple custom events\r\n$('#tree').tree({\r\n  'events': {\r\n    'dblclick,click .branch': function(e){\r\n      console.log e.type\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n- - -\r\n\r\nBy default its up to you to if you want to create switch element or not.\r\nAlso in this example,  `li` element with `open` class will by visibile by default.\r\n\r\n```html\r\n<ul id=\"tree\">\r\n  <li>\r\n    <span class=\"switch\">+</span>Folder1\r\n    <ul>\r\n      <li><span class=\"switch\">+</span>Folder1.1\r\n        <ul>\r\n          <!--- This element will be visible by default -->\r\n          <li class=\"open\">Folder1.1.1</li>\r\n        </ul>\r\n      </li>\r\n      <li>Folder1.2</li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n```\r\n\r\nThere is also one event which is triggerd when `switch` element is clicked. For example\r\n\r\n```\r\n<ul id=\"tree\">\r\n  <li>\r\n    <span class=\"switch\">+</span>Folder1\r\n    <ul>\r\n      <li><span class=\"switch\">+</span>Folder1.1\r\n        <ul>\r\n          <li class=\"open\">Folder1.1.1</li>\r\n        </ul>\r\n      </li>\r\n      <li>Folder1.2</li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n<script src=\"jquery.js\"></script>\r\n<script src=\"dist/jquery.tree.min.js\"></script>\r\n<script>\r\njQuery(function($) {\r\n  $('#tree').tree()\r\n  $('li.branch').on('tree.branch_toggle', function(event, data){\r\n    console.log(event, data);\r\n  })\r\n});\r\n</script>\r\n```\r\n\r\n`data` object contains one key `visible` which is current state of specified branch.\r\n\r\nYou can also look for some examples in `test/jquery.tree_test.js` file.\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\r\n\r\n_Also, please don't edit files in the \"dist\" subdirectory as they are generated via grunt. You'll find source code in the \"src\" subdirectory!_\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n\r\n## License\r\nCopyright (c) 2012 Rafa≈Ç Filipek\r\nLicensed under the MIT license.\r\n","tagline":"Tree plugin for jQuery","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}